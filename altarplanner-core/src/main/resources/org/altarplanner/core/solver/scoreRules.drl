package org.altarplanner.core.solver;
dialect  "java"

import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;

import org.altarplanner.core.domain.request.*;
import org.altarplanner.core.domain.Service;

global HardSoftScoreHolder scoreHolder;

// ############################################################################
// Hard constraints
// ############################################################################

rule "oneServicePerDay"
    when
        Service($id : id, $server : server != null, $date : mass.date)
        Service(mass.date == $date, id > $id, server == $server)
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1);
end

rule "notEnoughExperience"
    when
        Service(server != null, (mass.date.year - server.year) < type.minExp)
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1);
end

rule "dateOffRequest"
    when
        DateOffRequest($server : server, $date : date)
        Service(server == $server, mass.date == $date)
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1);
end

rule "dayOffRequest"
    when
        DayOffRequest($server : server, $day : day)
        Service(server == $server, mass.date.dayOfWeek == $day)
    then
        scoreHolder.addHardConstraintMatch(kcontext, -1);
end